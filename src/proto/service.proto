syntax = "proto3";

package proto;

option go_package = "src/proto";

import "google/api/annotations.proto";



message LoginResponse {
    string message = 1;
}

message LoginRequest {
    string user = 1;
    string password = 2;
}

message PageLimitRequest {
    int32 pageNo = 1;
    int32 limit = 2;
}

message PageLimitResponse {
    repeated NoteObject notes = 1;
    int32 totalRows = 2;
}

message CreateNoteRequest {
    string title = 1;
    string description = 2;
    bool isPinned = 3;
    string color = 4;    
}

message NoteObject {
    int32 id = 1;
    string title = 2;
    string description = 3;
    bool isPinned = 4;
    string color = 5;   
}

message NoteResponse {
    repeated NoteObject notes = 1;
}

message NoteIdRequest {
    int32 id = 1;
    string title = 2;
    string description = 3;
    bool isPinned = 4;
    string color = 5;
    
}

message NoteId {
    int32 id = 1;
}

message SearchNote {
    string item = 1;
    
}


service AddService {

    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
        };
    };

    rpc Show(PageLimitRequest) returns (PageLimitResponse) {
        option (google.api.http) = {
            get: "/v1/show/{pageNo}/{limit}"
        };
    };

    rpc Add(CreateNoteRequest) returns (NoteResponse) {
        option (google.api.http) = {
            post: "/v1/add"
            body: "*"
        };
    };

    rpc Update(NoteIdRequest) returns (NoteResponse) {
        option (google.api.http) = {
            put: "/v1/update/{id}"
            body: "*"
        };
    };

    rpc Delete(NoteId) returns (NoteResponse) {
        option (google.api.http) = {
            delete: "/v1/delete/{id}"
        };
    };

    rpc Search(SearchNote) returns (NoteResponse) {
        option (google.api.http) = {
            get: "/v1/search/{item}"
        };
    };
}